<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="5a74a36c-951a-4129-bf1c-60105ab2652f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MO_DCT_Flow" searchProperties="true" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="5a74a36c-951a-4129-bf1c-60105ab2652ffileName">MO_DCT_Flow</con:setting></con:settings><con:testStep type="groovy" name="MO Deactivation Flow" id="9e12f8e8-0bec-4480-8caa-c04f5bfa81a5"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper


Date date=new Date()
def title=("\r\n"+date+"Executing>>>"+context.getCurrentStep().getLabel()+"\r\n")
log.info title

def logFile=context.resultfile
// get a reference to the common util  TestSuite
def logapi = context.logAPI
//Dataset class object
def datasetobject = context.dataSet
//API execution class object
def apirunobject=context.apiRun
def talendobject=context.talendApiRun

Map dataset  = new HashMap();
Map usersubmap  = new HashMap();
int tc=0
int pass=0
int fail=0
long timeoutPeriod = 10000;

for (int i=1;i<= context.rowCount;i++)
{
	dataset=datasetobject.getRowDataMap(i)	
  	if(dataset.get("isexecutable") &&  dataset.get("expaccmode")=='SMS') 
	{
		tc++		
           msisdn= dataset.get("userid")
         //reset user 		
		datasetobject.resetUser(msisdn)
			
//Create Test User
datasetobject.createUser(dataset.get("customerid"),dataset.get("providerid"),msisdn,dataset.get("billingcode"),dataset.get("subbillingcode"),dataset.get("currbillingcode"),dataset.get("substate"),
                         dataset.get("startdate"),dataset.get("enddate"),dataset.get("subdate"),"Test_BaaS_DCT",'now()',"100",msisdn, dataset.get("itemid"),"4","1","kp=umob_dct")

	 //Mo Rx api execution     
	    def 	propertyMO= testRunner.testCase.getTestStepByName("properties")
	     //To set Parameter Values  of Activation API 	
      	propertyMO.setPropertyValue("msisdn",msisdn)	 	
		propertyMO.setPropertyValue("message",dataset.get("keyword"))
		propertyMO.setPropertyValue("date",date.toString())
		
		def 	stepMORx= testRunner.testCase.getTestStepByName("UMobile_MO")	 
		stepMORx.getHttpRequest().setEndpoint(context.expand('${#Global#talend_endpoint}'))    	 
	   	stepMORx.run(testRunner,testRunner.getRunContext())	
        
 //validate DB 	
 

   long startTime = System.currentTimeMillis();
while(true){
//validate DB values       	
 usersubmap= datasetobject.getUserData(msisdn,dataset.get("itemid"))

 	if(	usersubmap.get("subscription_status_id").toString()== dataset.get("expid"))

					{
						break;
					}
					else
					{
						long currentTime = System.currentTimeMillis();
						if((currentTime-startTime)<timeoutPeriod){
							sleep(200);
							log.info "waiting for notification to  process"
						}else{
							break;

						}}}

	if( 	usersubmap.get("subscription_status_id").toString() == dataset.get("expid")  &&
 		//usersubmap.get("validity") == 0 &&
 		usersubmap.get("credits") == 100 &&
 		usersubmap.get("current_billing_code").toString() == dataset.get("expbillcode")  
 		)
 	 {		 	
  	
  	def baas_api_log= logapi.assertBaaSLogAPI(msisdn,"DEACTIVATION_NOTIFICATION",dataset.get("activitytype"),dataset.get("activitytype"),dataset.get("activityres"),dataset.get("expid"),
  	dataset.get("expbillcode"),dataset.get("substate"),dataset.get("currbillingcode"),dataset.get("expaccmode"),dataset.get("expchargemode"),"false"
  	,dataset.get("integrationtype").toString(),dataset.get("customerid").toString(),dataset.get("providerid").toString(),"90",null)
  	
  def passresult= ("\r\n"+"[UMobile][MO][DCT]"+dataset.get("tcname")+" bass test: passed"+">>> user_baas_logAPI log: "+baas_api_log+"\r\n")
logFile.append passresult
log.info passresult

  	if (baas_api_log=="passed") {pass++}
  	else if (baas_api_log=="failed") {fail++
  log.error "Expected>>>" +context.expected
   log.error "Found>>>>" + context.actual
   }
   else{fail++}
	}	 
	else{
		fail++
def failresult=   ("\r\n"+"[UMobile][MO][DCT]"+dataset.get("tcname")+"  is failed"+"\r\n")
def expected=  ("\r\n"+"Expected Values:"+"sub_status_id=11 ,Validity=0 "+"\r\n")
def actual=  ("\r\n"+"But Found:  sub_status_id="+usersubmap.get("subscription_status_id")+",Validity="+usersubmap.get("validity")+" credits"+usersubmap.get("credits")+"\r\n")
log.error failresult
log.error expected
log.error actual
logFile.append failresult+"\r\n"+expected +"\r\n" + actual	
	}
	 
}
}
def summary=  ("\r\n"+date+" Execution Summary of "+context.getCurrentStep().getLabel()+"\r\n" + "Total Executed="+tc +"\r\n"+"Total Pass="+pass +"\r\n"+"Total Fail="+fail+"\r\n")
logFile.append summary
log.info summary]]></script></con:config></con:testStep><con:testStep type="properties" name="properties" id="d68d784d-ed4c-48ec-84c0-bb32b7dffaae"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" createMissingOnLoad="true" discardValuesOnSave="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>msisdn</con:name><con:value>6077000016</con:value></con:property><con:property><con:name>message</con:name><con:value>Stop All</con:value></con:property><con:property><con:name>date</con:name><con:value>Thu Jun 30 13:34:40 IST 2016</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="UMobile_MO" id="aef7f1ec-50d5-49c0-8bc4-3b5487a9b1cd" disabled="true"><con:settings/><con:config service="UMobile_MO" resourcePath="/umobmy/moreceiver" methodName="Moreceiver" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UMobile_MO" id="951d6996-7209-42a0-933a-38e77b5f5292" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://192.168.249.94:8088</con:endpoint><con:request><![CDATA[MoMsgId=1101&Shortcode=28282&Msisdn=${properties#msisdn}&DataCoding=0&Message=${properties#message}&DateTime=${properties#date}&Channel=SMS]]></con:request><con:originalUri>http://192.168.250.92/umobmy/moreceiver</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:setupScript>import com.eviware.soapui.model.project.ProjectFactoryRegistry
import com.eviware.soapui.impl.wsdl.WsdlProjectFactory

def workspace = testRunner.testCase.testSuite.project.workspace

def lib = (workspace==null) ? 
  ProjectFactoryRegistry.getProjectFactory(WsdlProjectFactory.WSDL_TYPE).createNew(context.expand('${projectDir}')+"/BaaS-Util.xml") :  workspace.getProjectByName("BaaS_Util")
if(!lib.open &amp;&amp; workspace!=null) 
{workspace.openProject(lib)
}

lib.testSuites['Common Util'].testCases['Common Methods'].testSteps["Log API"].run(testRunner, context)
lib.testSuites['Common Util'].testCases['Common Methods'].testSteps["DataSet"].run(testRunner, context)
lib.testSuites['Common Util'].testCases['Common Methods'].testSteps["Backend Job"].run(testRunner, context)

lib.testSuites['Common Util'].testCases['BaaS API'].testSteps['API Run'].run(testRunner, context)

lib.testSuites['Common Util'].testCases['Talend_API'].testSteps["Talend_API_Run"].run(testRunner, context)

def datasetobject = context.dataSet

String inputFile = context.expand('${#Global#input_path}')+ testRunner.testCase.testSuite.name+".xlsx"

datasetobject.getExcelDataIndex(inputFile,testRunner.testCase.name)

//establish db connection
datasetobject.getDBConnection()
</con:setupScript><con:properties/><con:reportParameters/></con:testCase>